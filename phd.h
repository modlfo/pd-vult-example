
/* Code automatically generated by Vult https://github.com/modlfo/vult */
#ifndef PHD_H
#define PHD_H

#include <stdint.h>
#include <math.h>
#include "vultin.h"
#include <m_pd.h>

typedef struct Phasedist__ctx_type_0 {
   float x;
} Phasedist__ctx_type_0;

typedef Phasedist__ctx_type_0 Phasedist_smooth_type;

void Phasedist__ctx_type_0_init(Phasedist__ctx_type_0 &_output_);

void Phasedist_smooth_init(Phasedist__ctx_type_0 &_output_);

float Phasedist_smooth(Phasedist__ctx_type_0 &_ctx, float input);

typedef struct Phasedist__ctx_type_1 {
   float pre_x;
} Phasedist__ctx_type_1;

typedef Phasedist__ctx_type_1 Phasedist_change_type;

void Phasedist__ctx_type_1_init(Phasedist__ctx_type_1 &_output_);

void Phasedist_change_init(Phasedist__ctx_type_1 &_output_);

uint8_t Phasedist_change(Phasedist__ctx_type_1 &_ctx, float x);

float Phasedist_pitchToRate(float d);

typedef struct Phasedist__ctx_type_3 {
   float rate;
   float phase;
   Phasedist__ctx_type_1 _inst1;
} Phasedist__ctx_type_3;

typedef Phasedist__ctx_type_3 Phasedist_phasor_type;

void Phasedist__ctx_type_3_init(Phasedist__ctx_type_3 &_output_);

void Phasedist_phasor_init(Phasedist__ctx_type_3 &_output_);

float Phasedist_phasor(Phasedist__ctx_type_3 &_ctx, float pitch, uint8_t reset);

typedef struct Phasedist__ctx_type_4 {
   float pre_phase1;
   float pitch;
   float detune;
   Phasedist__ctx_type_3 _inst3;
   Phasedist__ctx_type_0 _inst2;
   Phasedist__ctx_type_3 _inst1;
} Phasedist__ctx_type_4;

typedef Phasedist__ctx_type_4 Phasedist_process_type;

void Phasedist__ctx_type_4_init(Phasedist__ctx_type_4 &_output_);

void Phasedist_process_init(Phasedist__ctx_type_4 &_output_);

float Phasedist_process(Phasedist__ctx_type_4 &_ctx, float input);

typedef Phasedist__ctx_type_4 Phasedist_noteOn_type;

void Phasedist_noteOn_init(Phasedist__ctx_type_4 &_output_);

void Phasedist_noteOn(Phasedist__ctx_type_4 &_ctx, int note, int velocity, int channel);

typedef Phasedist__ctx_type_4 Phasedist_noteOff_type;

void Phasedist_noteOff_init(Phasedist__ctx_type_4 &_output_);

void Phasedist_noteOff(Phasedist__ctx_type_4 &_ctx, int note, int channel);

typedef Phasedist__ctx_type_4 Phasedist_controlChange_type;

void Phasedist_controlChange_init(Phasedist__ctx_type_4 &_output_);

void Phasedist_controlChange(Phasedist__ctx_type_4 &_ctx, int control, int value, int channel);

typedef Phasedist__ctx_type_4 Phasedist_default_type;

void Phasedist_default_init(Phasedist__ctx_type_4 &_output_);

void Phasedist_default(Phasedist__ctx_type_4 &_ctx);



#endif // PHD_H
